{
    "swagger": "2.0",
    "info": {
        "description": "Api Documentation",
        "version": "1.0",
        "title": "Api Documentation",
        "termsOfService": "urn:tos",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "tags": [
        {
            "name": "basic-error-controller",
            "description": "Basic Error Controller"
        },
        {
            "name": "chirp-stack-controller",
            "description": "Chirp Stack Controller"
        },
        {
            "name": "parking-controller",
            "description": "Parking Controller"
        },
        {
            "name": "parking-spot-controller",
            "description": "Parking Spot Controller"
        },
        {
            "name": "reservation-controller",
            "description": "Reservation Controller"
        },
        {
            "name": "user-admin-controller",
            "description": "User Admin Controller"
        },
        {
            "name": "user-controller",
            "description": "User Controller"
        }
    ],
    "paths": {
        "/admin/user": {
            "get": {
                "tags": [
                    "user-admin-controller"
                ],
                "summary": "getAllUsers",
                "operationId": "getAllUsersUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "user-admin-controller"
                ],
                "summary": "createUser",
                "operationId": "createUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createUserDTO",
                        "description": "createUserDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/admin/user/{idi}": {
            "get": {
                "tags": [
                    "user-admin-controller"
                ],
                "summary": "getUser",
                "operationId": "getUserUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "idi",
                        "in": "path",
                        "description": "idi",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "user-admin-controller"
                ],
                "summary": "updateUser",
                "operationId": "updateUserUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "idi",
                        "in": "path",
                        "description": "idi",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "updateUserDTO",
                        "description": "updateUserDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/admin/user/{idi}/block": {
            "post": {
                "tags": [
                    "user-admin-controller"
                ],
                "summary": "blockUser",
                "operationId": "blockUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "blocked",
                        "in": "query",
                        "description": "blocked",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "idi",
                        "in": "path",
                        "description": "idi",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/chirp_stack": {
            "post": {
                "tags": [
                    "chirp-stack-controller"
                ],
                "summary": "updateStatus",
                "operationId": "updateStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "uplink",
                        "description": "uplink",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChirpStackUplink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/error": {
            "get": {
                "tags": [
                    "basic-error-controller"
                ],
                "summary": "errorHtml",
                "operationId": "errorHtmlUsingGET",
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelAndView"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "head": {
                "tags": [
                    "basic-error-controller"
                ],
                "summary": "errorHtml",
                "operationId": "errorHtmlUsingHEAD",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelAndView"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "basic-error-controller"
                ],
                "summary": "errorHtml",
                "operationId": "errorHtmlUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelAndView"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "basic-error-controller"
                ],
                "summary": "errorHtml",
                "operationId": "errorHtmlUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelAndView"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "basic-error-controller"
                ],
                "summary": "errorHtml",
                "operationId": "errorHtmlUsingDELETE",
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelAndView"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            },
            "options": {
                "tags": [
                    "basic-error-controller"
                ],
                "summary": "errorHtml",
                "operationId": "errorHtmlUsingOPTIONS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelAndView"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "basic-error-controller"
                ],
                "summary": "errorHtml",
                "operationId": "errorHtmlUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelAndView"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/parking": {
            "get": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "getAll",
                "operationId": "getAllUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Parking"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "create",
                "operationId": "createUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "darkModeFile",
                        "in": "query",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "file",
                        "in": "query",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "points[0].latitude",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "points[0].longitude",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "spots[0].id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "spots[0].taskName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "spots[0].type",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "BOSCH_CAMERA_VCA_TASK",
                            "BOSCH_PARK_SENSOR_WITH_UPLINK_TASK"
                        ]
                    },
                    {
                        "name": "spots[0].x",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "spots[0].y",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Parking"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/available_task_names": {
            "get": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "getAvailableTaskNames",
                "operationId": "getAvailableTaskNamesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/overview": {
            "get": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "getOverview",
                "operationId": "getOverviewUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParkingOverviewDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/{parking_id}": {
            "get": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "getSingle",
                "operationId": "getSingleUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Parking"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "update",
                "operationId": "updateUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "darkModeFile",
                        "in": "query",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "file",
                        "in": "query",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "points[0].latitude",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "points[0].longitude",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "removeDarkModeFile",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "spots[0].id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "spots[0].taskName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "spots[0].type",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "BOSCH_CAMERA_VCA_TASK",
                            "BOSCH_PARK_SENSOR_WITH_UPLINK_TASK"
                        ]
                    },
                    {
                        "name": "spots[0].x",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "spots[0].y",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Parking"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "delete",
                "operationId": "deleteUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/{parking_id}/dark_mode_image": {
            "get": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "getDarkModeImage",
                "operationId": "getDarkModeImageUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/{parking_id}/image": {
            "get": {
                "tags": [
                    "parking-controller"
                ],
                "summary": "getImage",
                "operationId": "getImageUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/{parking_id}/reservation": {
            "get": {
                "tags": [
                    "reservation-controller"
                ],
                "summary": "getAll",
                "operationId": "getAllUsingGET_2",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reservation"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "reservation-controller"
                ],
                "summary": "create",
                "operationId": "createUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dto",
                        "description": "dto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReservationCreateDto"
                        }
                    },
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Reservation"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/{parking_id}/reservation/{reservation_id}": {
            "get": {
                "tags": [
                    "reservation-controller"
                ],
                "summary": "getSingle",
                "operationId": "getSingleUsingGET_2",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reservation_id",
                        "in": "path",
                        "description": "reservation_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Reservation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "reservation-controller"
                ],
                "summary": "update",
                "operationId": "updateUsingPUT_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dto",
                        "description": "dto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReservationCreateDto"
                        }
                    },
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reservation_id",
                        "in": "path",
                        "description": "reservation_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Reservation"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "reservation-controller"
                ],
                "summary": "delete",
                "operationId": "deleteUsingDELETE_1",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reservation_id",
                        "in": "path",
                        "description": "reservation_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/{parking_id}/spot": {
            "get": {
                "tags": [
                    "parking-spot-controller"
                ],
                "summary": "getAll",
                "operationId": "getAllUsingGET_1",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParkingSpotOverviewDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "parking-spot-controller"
                ],
                "summary": "updateAll",
                "operationId": "updateAllUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "spotsDto",
                        "description": "spotsDto",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParkingSpotCreateDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParkingSpot"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/parking/{parking_id}/spot/{parking_spot_id}": {
            "get": {
                "tags": [
                    "parking-spot-controller"
                ],
                "summary": "getSingle",
                "operationId": "getSingleUsingGET_1",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "parking_id",
                        "in": "path",
                        "description": "parking_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parking_spot_id",
                        "in": "path",
                        "description": "parking_spot_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ParkingSpot"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/user/current": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "summary": "getCurrentUser",
                "operationId": "getCurrentUserUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "admin",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "blocked",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "creationDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "lastUsageDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "modificationDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "passwordHash",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "STANDARD"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "user-controller"
                ],
                "summary": "updateUser",
                "operationId": "updateUserUsingPUT_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "admin",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "blocked",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "creationDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "creationTime",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastAccessedTime",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "lastUsageDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "maxInactiveInterval",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "modificationDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "new",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "passwordHash",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "STANDARD"
                        ]
                    },
                    {
                        "name": "servletContext.classLoader",
                        "in": "query",
                        "required": false,
                        "type": "ref"
                    },
                    {
                        "name": "servletContext.contextPath",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.defaultSessionTrackingModes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "COOKIE",
                                "URL",
                                "SSL"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "COOKIE",
                            "URL",
                            "SSL"
                        ]
                    },
                    {
                        "name": "servletContext.effectiveMajorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.effectiveMinorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.effectiveSessionTrackingModes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "COOKIE",
                                "URL",
                                "SSL"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "COOKIE",
                            "URL",
                            "SSL"
                        ]
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].buffer",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].defaultContentType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].deferredSyntaxAllowedAsLiteral",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].elIgnored",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].errorOnUndeclaredNamespace",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].includeCodas",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].includePreludes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].isXml",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].pageEncoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].scriptingInvalid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].trimDirectiveWhitespaces",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].urlPatterns",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.taglibs[0].taglibLocation",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.taglibs[0].taglibURI",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.majorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.minorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.requestCharacterEncoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.responseCharacterEncoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.serverInfo",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.servletContextName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.comment",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.domain",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.httpOnly",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.maxAge",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.path",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.secure",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "servletContext.sessionTimeout",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.virtualServerName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "userDTO",
                        "description": "userDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDTO"
                        }
                    },
                    {
                        "name": "valueNames",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/user/current/update_password": {
            "put": {
                "tags": [
                    "user-controller"
                ],
                "summary": "updatePassword",
                "operationId": "updatePasswordUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "admin",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "blocked",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "creationDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "creationTime",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastAccessedTime",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "lastUsageDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "maxInactiveInterval",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "modificationDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "new",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "passwordHash",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "passwordUpdateDTO",
                        "description": "passwordUpdateDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordUpdateDTO"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "STANDARD"
                        ]
                    },
                    {
                        "name": "servletContext.classLoader",
                        "in": "query",
                        "required": false,
                        "type": "ref"
                    },
                    {
                        "name": "servletContext.contextPath",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.defaultSessionTrackingModes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "COOKIE",
                                "URL",
                                "SSL"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "COOKIE",
                            "URL",
                            "SSL"
                        ]
                    },
                    {
                        "name": "servletContext.effectiveMajorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.effectiveMinorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.effectiveSessionTrackingModes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "COOKIE",
                                "URL",
                                "SSL"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "COOKIE",
                            "URL",
                            "SSL"
                        ]
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].buffer",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].defaultContentType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].deferredSyntaxAllowedAsLiteral",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].elIgnored",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].errorOnUndeclaredNamespace",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].includeCodas",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].includePreludes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].isXml",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].pageEncoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].scriptingInvalid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].trimDirectiveWhitespaces",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.jspPropertyGroups[0].urlPatterns",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.taglibs[0].taglibLocation",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.jspConfigDescriptor.taglibs[0].taglibURI",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.majorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.minorVersion",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.requestCharacterEncoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.responseCharacterEncoding",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.serverInfo",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.servletContextName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.comment",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.domain",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.httpOnly",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.maxAge",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.path",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "servletContext.sessionCookieConfig.secure",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "servletContext.sessionTimeout",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "servletContext.virtualServerName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "valueNames",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "Amount": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer",
                    "format": "int32"
                },
                "reserved": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Amount"
        },
        "BoschParkDataObject": {
            "type": "object",
            "properties": {
                "map_state": {
                    "type": "integer",
                    "format": "int32"
                },
                "message_type": {
                    "type": "string"
                },
                "p_state": {
                    "type": "string"
                }
            },
            "title": "BoschParkDataObject"
        },
        "ChirpStackUplink": {
            "type": "object",
            "properties": {
                "applicationID": {
                    "type": "string"
                },
                "applicationName": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "devEUI": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                },
                "fPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "object": {
                    "$ref": "#/definitions/BoschParkDataObject"
                }
            },
            "title": "ChirpStackUplink"
        },
        "CreateUserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "STANDARD"
                    ]
                }
            },
            "title": "CreateUserDTO"
        },
        "ModelAndView": {
            "type": "object",
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "model": {
                    "type": "object"
                },
                "modelMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "reference": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "100 CONTINUE",
                        "101 SWITCHING_PROTOCOLS",
                        "102 PROCESSING",
                        "103 CHECKPOINT",
                        "200 OK",
                        "201 CREATED",
                        "202 ACCEPTED",
                        "203 NON_AUTHORITATIVE_INFORMATION",
                        "204 NO_CONTENT",
                        "205 RESET_CONTENT",
                        "206 PARTIAL_CONTENT",
                        "207 MULTI_STATUS",
                        "208 ALREADY_REPORTED",
                        "226 IM_USED",
                        "300 MULTIPLE_CHOICES",
                        "301 MOVED_PERMANENTLY",
                        "302 FOUND",
                        "302 MOVED_TEMPORARILY",
                        "303 SEE_OTHER",
                        "304 NOT_MODIFIED",
                        "305 USE_PROXY",
                        "307 TEMPORARY_REDIRECT",
                        "308 PERMANENT_REDIRECT",
                        "400 BAD_REQUEST",
                        "401 UNAUTHORIZED",
                        "402 PAYMENT_REQUIRED",
                        "403 FORBIDDEN",
                        "404 NOT_FOUND",
                        "405 METHOD_NOT_ALLOWED",
                        "406 NOT_ACCEPTABLE",
                        "407 PROXY_AUTHENTICATION_REQUIRED",
                        "408 REQUEST_TIMEOUT",
                        "409 CONFLICT",
                        "410 GONE",
                        "411 LENGTH_REQUIRED",
                        "412 PRECONDITION_FAILED",
                        "413 PAYLOAD_TOO_LARGE",
                        "413 REQUEST_ENTITY_TOO_LARGE",
                        "414 URI_TOO_LONG",
                        "414 REQUEST_URI_TOO_LONG",
                        "415 UNSUPPORTED_MEDIA_TYPE",
                        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                        "417 EXPECTATION_FAILED",
                        "418 I_AM_A_TEAPOT",
                        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                        "420 METHOD_FAILURE",
                        "421 DESTINATION_LOCKED",
                        "422 UNPROCESSABLE_ENTITY",
                        "423 LOCKED",
                        "424 FAILED_DEPENDENCY",
                        "426 UPGRADE_REQUIRED",
                        "428 PRECONDITION_REQUIRED",
                        "429 TOO_MANY_REQUESTS",
                        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                        "500 INTERNAL_SERVER_ERROR",
                        "501 NOT_IMPLEMENTED",
                        "502 BAD_GATEWAY",
                        "503 SERVICE_UNAVAILABLE",
                        "504 GATEWAY_TIMEOUT",
                        "505 HTTP_VERSION_NOT_SUPPORTED",
                        "506 VARIANT_ALSO_NEGOTIATES",
                        "507 INSUFFICIENT_STORAGE",
                        "508 LOOP_DETECTED",
                        "509 BANDWIDTH_LIMIT_EXCEEDED",
                        "510 NOT_EXTENDED",
                        "511 NETWORK_AUTHENTICATION_REQUIRED"
                    ]
                },
                "view": {
                    "$ref": "#/definitions/View"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "ModelAndView"
        },
        "Parking": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "$ref": "#/definitions/User"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "fileName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "$ref": "#/definitions/User"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParkingPoint"
                    }
                },
                "radius": {
                    "type": "number",
                    "format": "double"
                },
                "spots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParkingSpot"
                    }
                }
            },
            "title": "Parking"
        },
        "ParkingOverviewDto": {
            "type": "object",
            "properties": {
                "availableSpots": {
                    "$ref": "#/definitions/Amount"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "fileName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "occupiedSpots": {
                    "$ref": "#/definitions/Amount"
                },
                "spots": {
                    "$ref": "#/definitions/Amount"
                }
            },
            "title": "ParkingOverviewDto"
        },
        "ParkingPoint": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ParkingPoint"
        },
        "ParkingSpot": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "$ref": "#/definitions/User"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "$ref": "#/definitions/User"
                },
                "occupied": {
                    "type": "boolean"
                },
                "occupiedSince": {
                    "type": "string",
                    "format": "date-time"
                },
                "taskName": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "BOSCH_CAMERA_VCA_TASK",
                        "BOSCH_PARK_SENSOR_WITH_UPLINK_TASK"
                    ]
                },
                "x": {
                    "type": "number",
                    "format": "double"
                },
                "y": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ParkingSpot"
        },
        "ParkingSpotCreateDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "taskName": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "BOSCH_CAMERA_VCA_TASK",
                        "BOSCH_PARK_SENSOR_WITH_UPLINK_TASK"
                    ]
                },
                "x": {
                    "type": "number",
                    "format": "double"
                },
                "y": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ParkingSpotCreateDto"
        },
        "ParkingSpotOverviewDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "occupied": {
                    "type": "boolean"
                },
                "occupiedSince": {
                    "type": "string",
                    "format": "date-time"
                },
                "reserved": {
                    "type": "boolean"
                },
                "taskName": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "BOSCH_CAMERA_VCA_TASK",
                        "BOSCH_PARK_SENSOR_WITH_UPLINK_TASK"
                    ]
                },
                "x": {
                    "type": "number",
                    "format": "double"
                },
                "y": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ParkingSpotOverviewDto"
        },
        "PasswordUpdateDTO": {
            "type": "object",
            "properties": {
                "currentPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "newPasswordConfirmation": {
                    "type": "string"
                }
            },
            "title": "PasswordUpdateDTO"
        },
        "Reservation": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "$ref": "#/definitions/User"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "$ref": "#/definitions/User"
                },
                "spots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParkingSpot"
                    }
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "Reservation"
        },
        "ReservationCreateDto": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "spotIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "ReservationCreateDto"
        },
        "UpdateUserDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "STANDARD"
                    ]
                }
            },
            "title": "UpdateUserDTO"
        },
        "User": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "blocked": {
                    "type": "boolean"
                },
                "createdBy": {
                    "$ref": "#/definitions/User"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastUsageDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "$ref": "#/definitions/User"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "ADMIN",
                        "STANDARD"
                    ]
                }
            },
            "title": "User"
        },
        "UserDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "title": "UserDTO"
        },
        "View": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                }
            },
            "title": "View"
        }
    }
}
